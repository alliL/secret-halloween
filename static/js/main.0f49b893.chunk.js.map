{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","dataChange","rootRef","firebase","database","ref","tempData","on","snapshot","Object","keys","val","forEach","key","push","length","className","content","cardInfo","Header","props","Cards","map","info","name","img","choices","completed","Card","editing","type","onClick","inputs","document","querySelectorAll","child","set","first","value","second","input","id","style","backgroundImage","AddCard","getElementById","GenerateCostumes","class","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render"],"mappings":"8RAkCeA,G,YA7BH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,KAEVC,EAAa,WACjB,IAAIC,EAAUC,IAASC,WAAWC,MAC9BC,EAAW,GACfJ,EAAQK,GAAG,SAAS,SAACC,GACnBC,OAAOC,KAAKF,EAASG,OAAOC,SAAQ,SAAAC,GAClCP,EAASQ,KAAKN,EAASG,MAAME,OAE/Bb,EAAQM,OAQZ,OAJmB,GAAfP,EAAKgB,QACPd,IAIA,yBAAKe,UAAU,aACb,kBAAC,EAAD,CAAQC,QAAQ,2BAChB,yBAAKD,UAAU,oBACb,kBAAC,EAAD,CAAOE,SAAUnB,EAAMC,QAASC,IAChC,kBAAC,EAAD,CAASD,QAASC,KAEpB,kBAAC,EAAD,SAOAkB,EAAS,SAACC,GACd,OAAQ,wBAAIJ,UAAU,eAAeI,EAAMH,UAGvCI,EAAQ,SAACD,GACb,OAAQA,EAAMF,SAAUI,KAAI,SAACC,GAC3B,OAAO,kBAAC,EAAD,CAAMV,IAAKU,EAAKC,KACrBA,KAAMD,EAAKC,KAAMC,IAAKF,EAAKE,IAC3BC,QAASH,EAAKG,QAASC,UAAWJ,EAAKI,gBAIvCC,EAAO,SAACR,GAEZ,IAYMS,EACJ,oCACE,yBAAKb,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,MAEF,2BAAOc,KAAK,OAAOd,UAAU,uBAE/B,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,MAEF,2BAAOc,KAAK,OAAOd,UAAU,uBAE/B,yBAAKA,UAAU,uCACb,4BAAQe,QA3BC,WACb,IAAIC,EAASC,SAASC,iBAAiB,IAAMd,EAAMI,KAAO,UACtDnB,EAAMF,IAASC,WAAWC,IAAIe,EAAMI,MAAMW,MAAM,SACpD9B,EAAI+B,IAAI,CAACC,MAAOL,EAAO,GAAGM,MAAOC,OAAQP,EAAO,GAAGM,SACnDjC,EAAMF,IAASC,WAAWC,IAAIe,EAAMI,MAAMW,MAAM,cAC5CC,KAAI,GACRJ,EAAOpB,SAAQ,SAAC4B,GACdA,EAAMF,MAAQ,MAEhBlB,EAAMpB,WAkBuBgB,UAAU,mBAAnC,YAKN,OAAO,yBAAKyB,GAAIrB,EAAMI,KAAMR,UAAU,0EACpC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cAAc0B,MAAO,CAAEC,gBAAiB,aAAgBvB,EAAMK,IAAM,OAAnF,QACA,wBAAIT,UAAU,0BAA0BI,EAAMI,MAC7CJ,EAAMO,UACL,oCACE,yBAAKc,GAAG,aAAY,sCACpB,uBAAGzB,UAAU,sCAAb,cAEFa,KAKFe,EAAU,SAACxB,GAUf,OAAO,yBAAKJ,UAAU,0EACpB,2BAAOyB,GAAG,OAAOX,KAAK,OAAOd,UAAU,qBACvC,wBAAIe,QAVU,WACd,IAAIP,EAAOS,SAASY,eAAe,QAAQP,MAC7BnC,IAASC,WAAWC,IAAImB,GAC9BY,IAAI,CAACX,IAAK,YAAaE,WAAW,EAAOH,KAAMA,IACvDJ,EAAMpB,UACNwB,EAAO,IAKeR,UAAU,0BAAhC,OAIE8B,EAAmB,SAAC1B,GAExB,OAAO,oCACL,2BAAOqB,GAAG,WAAWX,KAAK,OAAOd,UAAU,qBAC3C,4BAAQyB,GAAG,WAAWM,MAAM,mBAA5B,uBChGJ5C,IAAS6C,cAXY,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKnBC,IAASC,OAAO,kBAAC,EAAD,MAASzB,SAASY,eAAe,W","file":"static/js/main.0f49b893.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport firebase from 'firebase/app';\nimport './App.css';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataChange = () => {\n    let rootRef = firebase.database().ref();\n    let tempData = [];\n    rootRef.on(\"value\", (snapshot) => {\n      Object.keys(snapshot.val()).forEach(key => {\n        tempData.push(snapshot.val()[key])\n      });\n      setData(tempData);\n    });\n  }\n  \n  if (data.length == 0) {\n    dataChange();\n  }\n\n  return (\n    <div className=\"container\">\n      <Header content=\"Halloween Secret Santa\" />\n      <div className=\"d-flex flex-wrap\">\n        <Cards cardInfo={data} setData={dataChange} />\n        <AddCard setData={dataChange} />\n      </div>\n      <GenerateCostumes />\n      \n    </div>);\n}\n\nexport default App;\n\nconst Header = (props) => {\n  return (<h1 className=\"text-center\">{props.content}</h1>)\n}\n\nconst Cards = (props) => {\n  return (props.cardInfo).map((info) => {\n    return <Card key={info.name} \n      name={info.name} img={info.img} \n      choices={info.choices} completed={info.completed} />;\n  });\n}\n\nconst Card = (props) => {\n  \n  const submit = () => {\n    let inputs = document.querySelectorAll(\"#\" + props.name + \" .idea\");\n    let ref = firebase.database().ref(props.name).child(\"ideas\");\n    ref.set({first: inputs[0].value, second: inputs[1].value});\n    ref = firebase.database().ref(props.name).child(\"completed\");\n    ref.set(true);\n    inputs.forEach((input) => {\n      input.value = \"\";\n    });\n    props.setData();\n  }\n\n  const editing = (\n    <>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">1</span>\n        </div>\n        <input type=\"text\" className=\"form-control idea\" />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">2</span>\n        </div>\n        <input type=\"text\" className=\"form-control idea\" />\n      </div>\n      <div className=\"d-flex justify-content-space-around\">\n        <button onClick={submit} className=\"btn btn-warning\">Submit</button>\n      </div>\n    </>\n  );\n\n  return <div id={props.name} className=\"card profile-card d-flex align-items-center justify-content-center m-2\">\n    <div className=\"card-body\">\n      <div className=\"profile-img\" style={{ backgroundImage: \"url(\\\"/img/\" + props.img + \"\\\")\" }}>&nbsp;</div>\n      <h2 className=\"card-title text-center\">{props.name}</h2> \n      {props.completed ? \n        <>\n          <div id=\"checkmark\"><div>&nbsp;</div></div>\n          <p className=\"card-text text-success text-center\">Completed</p>\n        </> : \n        editing}\n    </div>\n  </div>\n}\n\nconst AddCard = (props) => {\n\n  const addCard = () => {\n    let name = document.getElementById(\"name\").value;\n    let rootRef = firebase.database().ref(name);\n    rootRef.set({img: \"candy.jpg\", completed: false, name: name})\n    props.setData();\n    name = \"\";\n  }\n\n  return <div className=\"card profile-card d-flex align-items-center justify-content-center m-3\">\n    <input id=\"name\" type=\"text\" className=\"form-control m-3\" />\n    <h2 onClick={addCard} className=\"card-title text-center\">+</h2> \n  </div>\n}\n\nconst GenerateCostumes = (props) => {\n\n  return <>\n    <input id=\"password\" type=\"text\" className=\"form-control m-3\" />\n    <button id=\"generate\" class=\"btn btn-warning\">Generate Costumes</button>\n  </>;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport './index.css';\nimport App from './App';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCNk5F5d84NTyCP8WJ0NCLDQoRzLgJ4tfA\",\n    authDomain: \"secret-halloween.firebaseapp.com\",\n    databaseURL: \"https://secret-halloween.firebaseio.com\",\n    projectId: \"secret-halloween\",\n    storageBucket: \"secret-halloween.appspot.com\",\n    messagingSenderId: \"258441556165\",\n    appId: \"1:258441556165:web:87908b8393746c0cd000ac\",\n    measurementId: \"G-43LHCHYH72\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}